name: Test CHP Scraper

on:
  workflow_dispatch:

jobs:
  test-scraper:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Install Chrome
      run: |
        sudo apt-get update
        wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
        echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable

    - name: Download ChromeDriver
      run: |
        # Use webdriver-manager to download the correct ChromeDriver
        python -c "
        from webdriver_manager.chrome import ChromeDriverManager
        from selenium.webdriver.chrome.service import Service
        import os
        import glob
        
        # Download and get the path to ChromeDriver
        driver_path = ChromeDriverManager().install()
        print(f'ChromeDriver installed at: {driver_path}')
        
        # Find the actual chromedriver executable (not the notices file)
        driver_dir = os.path.dirname(driver_path)
        actual_driver = glob.glob(os.path.join(driver_dir, 'chromedriver*'))[0]
        if not actual_driver.endswith('chromedriver'):
            # Look in subdirectories
            for root, dirs, files in os.walk(driver_dir):
                for file in files:
                    if file == 'chromedriver':
                        actual_driver = os.path.join(root, file)
                        break
        
        print(f'Actual ChromeDriver at: {actual_driver}')
        
        # Make it executable
        os.chmod(actual_driver, 0o755)
        
        # Create symlink for easy access
        os.system(f'sudo ln -sf {actual_driver} /usr/local/bin/chromedriver')
        
        # Verify installation
        os.system('chromedriver --version')
        "

    - name: Test scraper
      run: |
        python chp_scraper.py --center BCCC --mode github_actions --iterations 1

    - name: Check output files
      run: |
        echo "=== Checking for output files ==="
        ls -la *.json
        ls -la data/
        
        if [ -f "active_incidents.json" ]; then
          echo "✅ active_incidents.json exists"
          echo "Content preview:"
          head -10 active_incidents.json
        else
          echo "❌ active_incidents.json not found"
        fi

    - name: Commit and push results
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add *.json data/
        if [ -n "$(git status --porcelain)" ]; then
          git commit -m "Test scraper run - $(date '+%Y-%m-%d %H:%M:%S')"
          git push
          echo "✅ Changes committed and pushed"
        else
          echo "ℹ️ No changes to commit"
        fi
